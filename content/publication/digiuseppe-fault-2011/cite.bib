@inproceedings{digiuseppe_fault_2011,
 abstract = {Multiple faults in a program can interact to form new behaviors in a program that would not be realized if the program were to contain the individual faults. This paper presents an in-depth study of the effects of the interaction of faults within a program. Many researchers attempt to ameliorate the effects of faulty programs. Unfortunately, such researchers are left to rely upon intuition about fault behavior due to the paucity of formalized studies of faults and their behavior. In an attempt to advance the understanding of faults and their behavior, we conducted a study of fault interaction across six subjects with more than 65,000 multiple-fault versions. The results of our study show four significant types of interaction, with one type - faults obscuring the effects of other faults - as the most prevalent type. The prevalence of obscuring faults' effects has an adverse effect on many automated software-engineering techniques, such as regression-testing, fault-localization, and fault-clustering techniques. Given that software commonly contains more than a single fault, these results have implications for developers and researchers alike by informing them of expected complications, which in many instances are opposite to intuition.},
 author = {DiGiuseppe, Nicholas and Jones, James A.},
 booktitle = {2011 27th IEEE International Conference on Software Maintenance (ICSM)},
 doi = {10.1109/ICSM.2011.6080767},
 file = {IEEE Xplore Abstract Record:files/48/6080767.html:text/html},
 keywords = {Flexible printed circuits, Informatics, Interference, Noise, Schedules, Software, Testing},
 month = {September},
 note = {ISSN: 1063-6773},
 pages = {3--12},
 title = {Fault interaction and its repercussions},
 year = {2011}
}

