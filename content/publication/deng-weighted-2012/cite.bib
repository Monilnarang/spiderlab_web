@inproceedings{deng_weighted_2012,
 abstract = {In this paper, we present a weighted, hybrid program-dependence model that represents the relevance of highly related, dependent code to assist developer comprehension of the program for multiple software-engineering tasks. Programmers often need to understand the dependencies among program elements, which may exist across multiple modules. Although such dependencies can be gathered from traditional models, such as slices, the scalability of these approaches is often prohibitive for direct, practical use. To address this scalability issue, as well as to assist developer comprehension, we introduce a program model that includes static dependencies as well as information about any number of executions, which inform the weight and relevance of the dependencies. Additionally, classes of executions can be differentiated in such a way as to support multiple software-engineering tasks. We evaluate this weighted, hybrid model for a task that involves exploring the structural context while debugging. The results demonstrate that the new model more effectively reveals relevant failure-correlated code than the static-only model, thus enabling a more scalable exploration or post hoc analysis.},
 author = {Deng, Fang and Jones, James A.},
 booktitle = {Verification and Validation 2012 IEEE Fifth International Conference on Software Testing},
 doi = {10.1109/ICST.2012.118},
 file = {IEEE Xplore Abstract Record:files/32/6200130.html:text/html},
 keywords = {Analytical models, Context, Correlation, Data models, debugging, Debugging, dynamic analysis, fault-localization, hybrid analysis, Instruments, program models, Runtime, static analysis},
 month = {April},
 note = {ISSN: 2159-4848},
 pages = {380--389},
 title = {Weighted System Dependence Graph},
 year = {2012}
}

