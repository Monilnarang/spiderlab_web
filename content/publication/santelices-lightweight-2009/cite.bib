@inproceedings{santelices_lightweight_2009,
 abstract = {Lightweight fault-localization techniques use program coverage to isolate the parts of the code that are most suspicious of being faulty. In this paper, we present the results of a study of three types of program coverage—statements, branches, and data dependencies—to compare their effectiveness in localizing faults. The study shows that no single coverage type performs best for all faults—different kinds of faults are best localized by different coverage types. Based on these results, we present a new coverage-based approach to fault localization that leverages the unique qualities of each coverage type by combining them. Because data dependencies are noticeably more expensive to monitor than branches, we also investigate the effects of replacing data-dependence coverage with an approximation inferred from branch coverage. Our empirical results show that (1) the cost of fault localization using combinations of coverage is less than using any individual coverage type and closer to the best case (without knowing in advance which kinds of faults are present), and (2) using inferred data-dependence coverage retains most of the benefits of combinations.},
 author = {Santelices, Raul and Jones, James A. and Yu, Yanbing and Harrold, Mary Jean},
 booktitle = {2009 IEEE 31st International Conference on Software Engineering},
 doi = {10.1109/ICSE.2009.5070508},
 file = {IEEE Xplore Abstract Record:files/60/5070508.html:text/html},
 keywords = {Condition monitoring, Costs, Educational institutions, Informatics, Instruments, Isolation technology, Java, Performance evaluation, Runtime, Software debugging},
 month = {May},
 note = {ISSN: 1558-1225},
 pages = {56--66},
 title = {Lightweight fault-localization using multiple coverage types},
 year = {2009}
}

